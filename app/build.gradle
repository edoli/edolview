buildscript {
    ext {
        appName = "edolView"
        kotlin_version = '1.7.10'
        openjfx_version = '0.0.8'
        gdx_version = '1.11.0'
        ikonli_version = "11.3.4"
    }
}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 33

    sourceSets {
        main {
            assets.srcDirs = ['../assets']
        }

    }

    defaultConfig {
        applicationId "kr.edoli.edolview"
        minSdk 25
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

configurations { natives }

dependencies {
    implementation project(":core")
    implementation project(":opencv-sdk")

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    implementation "com.badlogicgames.gdx:gdx-backend-android:$gdx_version"

    natives "com.badlogicgames.gdx:gdx-platform:$gdx_version:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdx_version:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdx_version:natives-x86"
    natives "com.badlogicgames.gdx:gdx-platform:$gdx_version:natives-x86_64"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdx_version:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdx_version:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdx_version:natives-x86"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdx_version:natives-x86_64"
}


task copyAndroidNatives {
    doFirst {
        file("src/main/jniLibs/armeabi-v7a/").mkdirs()
        file("src/main/jniLibs/arm64-v8a/").mkdirs()
        file("src/main/jniLibs/x86_64/").mkdirs()
        file("src/main/jniLibs/x86/").mkdirs()

        configurations.natives.files.each { jar ->
            def outputDir = null
            if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("src/main/jniLibs/arm64-v8a")
            if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("src/main/jniLibs/armeabi-v7a")
            if(jar.name.endsWith("natives-x86_64.jar")) outputDir = file("src/main/jniLibs/x86_64")
            if(jar.name.endsWith("natives-x86.jar")) outputDir = file("src/main/jniLibs/x86")
            if(outputDir != null) {
                copy {
                    from zipTree(jar)
                    into outputDir
                    include "*.so"
                }
            }
        }
    }
}

tasks.whenTaskAdded { packageTask ->
    if (packageTask.name.contains("package")) {
        packageTask.dependsOn 'copyAndroidNatives'
    }
}

task run(type: Exec) {
    def path
    def localProperties = project.file("../local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        if (sdkDir) {
            path = sdkDir
        } else {
            path = "$System.env.ANDROID_HOME"
        }
    } else {
        path = "$System.env.ANDROID_HOME"
    }

    def adb = path + "/platform-tools/adb"
    commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.badlogicgames.superjumper.android/com.badlogicgames.superjumper.android.AndroidLauncher'
}