buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    ext {
        appName = "EdolView"
        kotlin_version = '1.5.10'
        openjfx_version = '0.0.8'
        gdx_version = "1.9.12"
        ikonli_version = "11.3.4"
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
}

compileKotlin {
    kotlinOptions.useIR = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"

    implementation "com.badlogicgames.gdx:gdx:$gdx_version"
    implementation "com.badlogicgames.gdx:gdx-freetype:$gdx_version"
//    implementation "com.badlogicgames.gdx:gdx-tools:$gdx_version"
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdx_version"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdx_version:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdx_version:natives-desktop"

    implementation "org.jetbrains.kotlinx:kotlinx-cli:0.3.2"
    implementation "io.reactivex:rxjava:1.1.6"
    implementation "commons-io:commons-io:2.4"

    implementation 'no.tornado:tornadofx:1.7.17'
    implementation 'com.drewnoakes:metadata-extractor:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.9'

    implementation group: 'com.google.guava', name: 'guava', version: '20.0'
}

project.ext.mainClassName = "kr.edoli.imview.MainKt"
project.ext.appname = 'EdolView'
project.ext.assetsDir = new File("./assets")

application {
    mainClassName = project.mainClassName
    applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
}

run {
    workingDir = project.assetsDir
}

distTar.enabled = false

task installAfter() {
    doLast {
        def configJson = """
    {
      "classPath": [
      ${String.join(',\n', new File("./build/install/desktop/lib").list().findAll{ !it.contains("arm") && !it.contains("x86") }.collect {"\"lib/${it}\"" })}
      ],
      "mainClass": "kr.edoli.imview.MainKt",
      "vmArgs": [
        "-Xmx4G"
      ]
    }
    """
        new File("./build/install/desktop/config.json").write(configJson)
    }
}

installDist.finalizedBy(installAfter)

distributions {
    main {
        contents {
            from('./assets')
            exclude('test*')
            exclude('*.svg')
            exclude('*.log')
            exclude('build*')
            exclude('imview.bat')
            exclude('icon.ico')
            exclude('config.json')
        }
    }
}